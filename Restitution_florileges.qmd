---
params:
  structure_name: "Mairie de Montreuil"
title: "Restitution florilège"
format:
  dashboard:
    scrolling: true
    embed-resources: true
    css: styles.css
execute:
  echo: false
  message : false
  warning : false
  error : false
---

# Chiffres clés {orientation="columns"}

## Colonne 1

```{r}
# Variables constantes
structure_name = params$structure_name
```

```{r}
source("programs/library.R")
source("programs/df_florileges.R")
source("programs/function_graphics.R")
```

### Ligne 1-A

Nom de la structure : `r structure_name`

Nombre d'espaces verts : `r nb_site`

Nombre de saisisseurs : `r nb_saisisseur`

Nombre d'espèces : `r length(unique(all_tax))` espèces différentes vues

### Ligne 2-A

<div style="height:250px;">
```{r}
#| title: Nombre de taxons de la liste florilèges observés

gauge(value = nb_sp_liste, min = 0, max = 60)
```
</div>

### Ligne 3-A

::: {.valuebox icon="eye" color="#ced600"}
Nombre d'espèces hors liste vues :

`r length(lst_structure)`

Moyenne nationale : `r round(mean(df_taxon_add$n_tax), 2)`
:::

### Ligne 4-A

::: {.callout-note collapse="true" icon=false title="Tableau des espèces vues lors de la dernière année d'observation"}

```{r}
DT::datatable(df_tb,
              class = 'cell-border stripe',
              extensions = "Buttons",
              options = list(buttons = c("copy", "csv"),
                            dom = 'Bfrtip'),
              rownames = FALSE)
```
:::

## Colonne B

### Ligne 1-B

```{r}
#| title: Familles les plus observées dans les sessions
#| fig-width: 5
#| fig-height: 5

graph_donut(df_donut = df_top_5, vec_col = df_top_5$couleur, fill = "FAMILLE", txtlab = "FAMILLE")
```


### Ligne 2-B

```{r}
#| title: Proportion des relevés de chaque famille parmi toute les sessions d'observations de la structure
#| class-output: plotly_output

couleur_esp = rep("#c0cdf5", nrow(df_tax_ab))
couleur_esp[which(df_tax_ab$FAMILLE %in% lst_top_5)] = couleurs_top_5[1:length(lst_top_5)]

df_tax_ab = df_tax_ab %>%
  mutate(couleur = couleur_esp)

gg_histo_plotly(df_hp = df_tax_ab, x = "FAMILLE", y = "prop_pres", fill = "FAMILLE",
                limits = df_tax_ab$FAMILLE, couleur = df_tax_ab$couleur,
                percent = TRUE, ytxt = "Proportion d'observations", title = "") %>%
  config(modeBarButtonsToRemove = c("select2d", "lasso2d", "autoscale2d",
                                    "zoomOut2d", "zoomIn2d", "hoverClosestCartesian",
                                    "hoverCompareCartesian"),
         displaylogo = FALSE)
```

# Repartition des taxons  {scrolling=FALSE}

```{r}
df_sunburst <- data.frame()
all_levels <- c("REGNE", "FAMILLE", "taxon_combine")

for (i in 2:length(all_levels)) {
  temp <- df_obs_taxon %>%
    group_by(across(all_levels[1:i])) %>%
    summarise(nobs = sum(nobs), .groups = "drop") %>%
    mutate(parent = .data[[all_levels[i - 1]]],
           label = .data[[all_levels[i]]]) %>%
    select(parent, label, nobs)
  
  df_sunburst <- bind_rows(df_sunburst, temp)
}

df_sunburst <- bind_rows(
  data.frame(parent = "", label = "Plantae", nobs = sum(df_obs_taxon$nobs)),
  df_sunburst
)
```

```{r}
plot_ly(labels = df_sunburst$label,
              parents = df_sunburst$parent,
              values = df_sunburst$nobs,
              type = 'sunburst',
              branchvalues = 'total')
```


# Richesse {orientation="columns"}

## Par année

:::panel-tabset

### Annuelle

```{r}

ggplot(df_richesse, aes(x = session_year_factor, fill = is.liste)) +
  geom_bar() +
  scale_fill_manual(breaks = c("liste", "hors liste"), values = c("#cd9047", "#8D6A9F")) +
  scale_x_discrete(drop = FALSE) +
  theme_cowplot() +
  xlab("Années") +
  ylab("Richesse annuelle") +
  labs(fill = "Liste Florilèges")

```

### Par site

```{r}
ggplot(df_richesse_site, aes(x = session_year_factor, y = rich_moy)) +
  geom_bar(fill = "#DDA3B2", stat = "identity") +
  # geom_point(data = df_richesse_site_reg, mapping = aes(x = session_year_factor_all, y = rich_moy)) +
  geom_smooth(data = df_richesse_site_reg, mapping = aes(x = session_year_factor_all, y = rich_moy, group = 1),
              color = "#ff547e") +
  scale_x_discrete(drop = FALSE) +
  theme_cowplot() +
  xlab("Années") +
  ylab("Richesse moyenne par site")
```

:::

### Référentiel

```{r}
#| title: Pourcentage des sessions réalisées par la structure par rapport aux sessions effectuées dans la région chaque année

ggplot(df_session, aes(x = as.integer(session_year), fill = structure)) +
    geom_bar(position = "fill")+
    scale_fill_manual(values=c("#ED6A5A", "#D0E3CC"), breaks=c("Structure", "Autres"))+
    ylab("% de sessions") +
    xlab("Années") +
    labs(fill = "Structure") +
    theme_cowplot()
```


## Cumulée

:::panel-tabset

### Liste Florilèges uniquement

```{r}
ggplot(df_rich_cumul_lst_flori, aes(x = as.integer(min_year), y = rich_cumul)) +
  geom_line(color = "#90d3ff") +
  geom_point(color = "#1aa4ff") +
  geom_hline(yintercept = 60, linetype = "dashed", color = "#F25757") +
  ylab("Richesse cumulée") +
  xlab("Années") +
  ylim(0, NA) +
  theme_cowplot()
```

### Liste Florilèges + espèces hors liste

```{r}
ggplot(df_rich_cumul_all, aes(x = as.integer(min_year), y = rich_cumul)) +
  geom_line(color = "#90d3ff") +
  geom_point(color = "#1aa4ff") +
  ylab("Richesse cumulée") +
  xlab("Années") +
  ylim(0, NA) +
  scale_x_continuous(limits = c(min(as.integer(df_florileges_presence_struct$session_year), na.rm = T)-1,
                                  max(as.integer(df_florileges_presence_struct$session_year), na.rm = T)+1)) +
  theme_cowplot()
```

:::

# Participation

```{r}
ggplot(df_site_tempo_line, aes(x = session_year, y = reorder(name, session_year) )) +
    geom_line(aes(group = groupe), color = "#aa3839", linewidth = 0.6) +
    geom_point(df_site_point, mapping = aes(x = session_year, y = name),
               color = "#aa3839", size = 1.5) +
    scale_x_continuous(limits = c(min(as.integer(df_florileges$session_year), na.rm = T)-1,
                                  max(as.integer(df_florileges$session_year), na.rm = T)+1),
                       sec.axis = dup_axis()) +
    theme_minimal() + xlab("Années") + ylab("Sites")
  
```

# Diagramme radar

:::panel-tabset

```{r}
#| results: asis
#| fig-width: 6
#| fig-height: 4

for (id_site in unique(df_radar_struct$site_id)) {
  site_name = unique(df_radar_struct %>% filter(site_id == id_site) %>% pull(site) )
  cat(sprintf("\n\n## %s\n\n", site_name))
  
  df_radar_site = df_radar_struct %>% filter(site_id == id_site)
  
  # Richesse
  sp_flori = unique(df_radar_site$taxon_nom_scientifique)
  sp_flori = sp_flori[!is.na(sp_flori)]
  
  # Typicité prairie
  typicite_prairie = length(which(str_detect(df_radar_site$HABITAT, "prairie")))
  
  site_nitro = mean(df_radar_site$Nitrophilie, na.rm = T)
  site_entomo = mean(df_radar_site$BioticVector, na.rm = T)
  site_vivace = mean(df_radar_site$Vivace, na.rm = T)
  
  df_graph_radar = data.frame(Nitrophilie = c(max_nitro, min_nitro, reg_nitro, site_nitro),
                              Entomophilie = c(max_entomo, min_entomo, reg_entomo, site_entomo),
                              Vivace = c(max_vivace, min_vivace, reg_vivace, site_vivace),
                              Richesse = c(60, 0, reg_sp_flori, length(sp_flori)),
                              `Typicité prairie` = c(1, 0, reg_typicite_prairie, 
                                                     typicite_prairie/nrow(df_radar_site)))
  rownames(df_graph_radar) = c("Max", "Min", "Région", "Site")
  
  op <- par(mar = c(1, 2, 2, 1))
  radarchart(df_graph_radar, 
             pcol = c("#000000", "#00AFBB"), pfcol = scales::alpha(c("#FFD166", "#00AFBB"), c(0, 0.2)),
             plwd = c(3, 3), plty = c("dashed", "solid"),
             cglty = 1, cglwd = 0.8,
             cglcol = "grey", vlabels = colnames(df_graph_radar), vlcex = 0.7)
  legend(-2,0,
       legend=c("Région", "Site"),
       pch=19,
       col=c("#000000", "#00AFBB"),
       lty=c(2, 1))
  par(op)

}
```

:::


